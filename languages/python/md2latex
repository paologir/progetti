#!/usr/bin/env python3
import markdown2
import re
import sys
import argparse

def convert_md_to_latex(md_file, latex_file, header=None, footer=None):
    try:
        with open(md_file, 'r', encoding='utf-8') as f:
            md_content = f.read()
    except FileNotFoundError:
        print(f"Error: The file {md_file} does not exist.")
        return
    except Exception as e:
        print(f"Error reading the file {md_file}: {e}")
        return

    try:
        # Convert Markdown to HTML using markdown2 with LaTeX output
        html_content = markdown2.markdown(md_content, extras=["tables", "fenced-code-blocks"])
    except Exception as e:
        print(f"Error converting Markdown to HTML: {e}")
        return

    # Convert the HTML to LaTeX by adjusting HTML tags to LaTeX commands
    try:
        latex_content = html_content.replace('<h1>', '\\section{').replace('</h1>', '}')
        latex_content = latex_content.replace('<h2>', '\\subsection{').replace('</h2>', '}')
        latex_content = latex_content.replace('<h3>', '\\subsubsection{').replace('</h3>', '}')
        latex_content = latex_content.replace('<ul>', '\\begin{itemize}').replace('</ul>', '\\end{itemize}')
        latex_content = latex_content.replace('<ol>', '\\begin{enumerate}').replace('</ol>', '\\end{enumerate}')
        latex_content = latex_content.replace('<li>', '\\item ').replace('</li>', '')
        latex_content = latex_content.replace('<strong>', '\\textbf{').replace('</strong>', '}')
        latex_content = latex_content.replace('<code>', '\\texttt{').replace('</code>', '}')
        latex_content = latex_content.replace('<pre><code>', '\\begin{verbatim}').replace('</code></pre>', '\\end{verbatim}')
        latex_content = latex_content.replace('<em>', '\\textit{').replace('</em>', '}')
        latex_content = latex_content.replace('_', '\\_')
        latex_content = re.sub(r'\\_(?=[a-zA-Z])', '_', latex_content)
        latex_content = latex_content.replace('<s>', '\\sout{').replace('</s>', '}')        

        # Handle tables
        latex_content = latex_content.replace('<table>', '\\begin{tabular}{|' + 'l|' * 10 + '}\\hline\n')
        latex_content = latex_content.replace('</table>', '\\end{tabular}')
        latex_content = latex_content.replace('<thead>', '').replace('</thead>', '\\hline\n')
        latex_content = latex_content.replace('<tbody>', '').replace('</tbody>', '')
        latex_content = latex_content.replace('<tr>', '').replace('</tr>', ' \\\\ \\hline\n')
        latex_content = latex_content.replace('<th>', '').replace('</th>', ' & ')
        latex_content = latex_content.replace('<td>', '').replace('</td>', ' & ')
        
        # Remove extra '&' at the end of each row
        latex_content = re.sub(r'&\s*\\\\ \\hline', r'\\\\ \\hline', latex_content)
        
        # Handle paragraphs
        latex_content = latex_content.replace('<p>', '').replace('</p>', '\n\n')
    except Exception as e:
        print(f"Error converting HTML to LaTeX: {e}")
        return

    # Add basic LaTeX document structure
    latex_template = r'''
\documentclass[a4paper,12pt]{article}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{hyperref}
\usepackage[margin=1in]{geometry}
\usepackage{fancyhdr}
\usepackage{array}
\usepackage{booktabs}

\pagestyle{fancy}
\lhead{{{header}}} % Left header
\rhead{} % Right header
\chead{} % Center header
\lfoot{{{footer}}} % Left footer
\cfoot{} % Center footer
\rfoot{Page \thepage}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}

\begin{document}

{content}

\end{document}
'''

    # Concatenate the LaTeX document
    latex_document = latex_template.replace("{content}", latex_content)
    latex_document = latex_document.replace("{header}", header if header else "Paolo Gironi - Data Specialist, SEO, SEM")
    latex_document = latex_document.replace("{footer}", footer if footer else "Via Zanella, 4 - 36022 S.Giuseppe di Cassola (VI) - P.Iva 03137610246")

    # Write the LaTeX content to a file
    try:
        with open(latex_file, 'w', encoding='utf-8') as f:
            f.write(latex_document)
    except Exception as e:
        print(f"Error writing to the file {latex_file}: {e}")
        return

    print(f"LaTeX file has been created: {latex_file}")
    print("Ricorda di compilare il file con pdflatex per ottenere un PDF.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Converti un file Markdown in LaTeX.')
    parser.add_argument('input_file', help='Nome del file di input Markdown')
    parser.add_argument('output_file', nargs='?', help='Nome del file di output LaTeX (opzionale)')
    parser.add_argument('--header', help='Testo della sezione header (opzionale)')
    parser.add_argument('--footer', help='Testo della sezione footer (opzionale)')
    args = parser.parse_args()

    if not args.output_file:
        output_file = args.input_file.replace('.md', '.tex')
    else:
        output_file = args.output_file

    convert_md_to_latex(args.input_file, output_file, args.header, args.footer)
